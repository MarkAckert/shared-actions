name: "Create docker manifest"
description: "This action helps to create and publish docker manifest."
inputs:
  linux-distro:
    description: "Linux distro name. This should be the second level folder name."
    required: false
    default: "ubuntu"
  cpu-arch-list:
    description: "CPU architecture name list seperated by space."
    required: false
    default: "amd64 s390x"
  snapshot-manifests:
    description: "If we want to create extra snapshot manifests when it's a formal release. Use {major}, {minor}, {patch} and {branch} special variables for special manifest based on current version."
    required: false
    default: ""
  release-manifests:
    description: "If we want to create extra release manifests when it's a formal release. Use {major}, {minor} and {patch} special variables for special manifest based on current version."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Define extra manifests
      run: |
        extras=
        if [ "${{ inputs.snapshot-manifests }}" != "" -a "${{ env.IMAGE_RELEASE }}" != "true" ]; then
          for manifest in ${{ inputs.snapshot-manifests }}
          do
            manifest=$(echo "${manifest}" | sed -e "s/{major}/${{ env.IMAGE_VERSION_MAJOR }}/" -e "s/{minor}/${{ env.IMAGE_VERSION_MINOR }}/" -e "s/{patch}/${{ env.IMAGE_VERSION_PATCH }}/" -e "s/{branch}/${{ env.BRANCH_NAME }}/")
            echo "************ extra manifest: ${manifest}"
            extras="${extras} ${{ env.ZOWE_DOCKER_REGISTRY }}/${{ env.DEFAULT_ZOWE_IMAGE_PREFIX }}${{ env.IMAGE_NAME }}:${manifest}"
          done
        fi
        if [ "${{ inputs.release-manifests }}" != "" -a "${{ env.IMAGE_RELEASE }}" = "true" ]; then
          for manifest in ${{ inputs.release-manifests }}
          do
            manifest=$(echo "${manifest}" | sed -e "s/{major}/${{ env.IMAGE_VERSION_MAJOR }}/" -e "s/{minor}/${{ env.IMAGE_VERSION_MINOR }}/" -e "s/{patch}/${{ env.IMAGE_VERSION_PATCH }}/" -e "s/{branch}/${{ env.BRANCH_NAME }}/")
            echo "************ extra manifest: ${manifest}"
            extras="${extras} ${{ env.ZOWE_DOCKER_REGISTRY }}/${{ env.DEFAULT_ZOWE_IMAGE_PREFIX }}${{ env.IMAGE_NAME }}:${manifest}"
          done
        fi
        echo "IMAGE_MANIFEST_EXTRAS=${extras}" >> $GITHUB_ENV
      shell: bash

    - name: Create and publish manifests
      run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        amends=
        for arch in ${{ inputs.cpu-arch-list }}
        do
          amend=$(echo "${IMAGE_MANIFEST_AMEND}" | sed -e "s/{ARCH}/${arch}/")
          echo "************ adding amend ${amend}"
          amends="${amends} --amend ${amend}"
        done
        IMAGE_MANIFEST="${{ env.IMAGE_MANIFEST }} ${{ env.IMAGE_MANIFEST_EXTRAS }}"
        echo "************ final manifests: ${IMAGE_MANIFEST}"
        for manifest in ${IMAGE_MANIFEST}
        do
          echo "************ creating ${manifest}"
          docker manifest create ${manifest} ${amends}
          docker manifest push ${manifest}
        done
      shell: bash
